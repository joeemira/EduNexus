/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login.application;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;





/**
 *
 * @author Muhamed Afifi
 */
public class registeringCourses2 extends javax.swing.JFrame {

  
  
    
    
  
    /**
     * Creates new form screen2
     * @param m
     */
    public registeringCourses2( ) {
        
      initComponents();
       loadSubjectsFromDatabase();
      
      //  initComponents();
    }
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        RemoveButton = new javax.swing.JButton();
        BackB = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        DoneButton1 = new javax.swing.JButton();
        subjects = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Physics (I)", "math1", "hi heelo", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel3.setBackground(new java.awt.Color(0, 102, 102));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REGISTERING COURSES ( STUDENT )");
        setMinimumSize(new java.awt.Dimension(800, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "                              subjects               ", "      hours"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table1.setDragEnabled(true);
        jScrollPane2.setViewportView(Table1);
        if (Table1.getColumnModel().getColumnCount() > 0) {
            Table1.getColumnModel().getColumn(0).setPreferredWidth(250);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 130, 380, 290);

        RemoveButton.setBackground(new java.awt.Color(0, 102, 102));
        RemoveButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        RemoveButton.setForeground(new java.awt.Color(255, 255, 255));
        RemoveButton.setText("Remove Subject");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RemoveButton);
        RemoveButton.setBounds(470, 220, 160, 40);

        BackB.setBackground(new java.awt.Color(255, 255, 255));
        BackB.setForeground(new java.awt.Color(154, 37, 37));
        BackB.setText("Back");
        BackB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBActionPerformed(evt);
            }
        });
        getContentPane().add(BackB);
        BackB.setBounds(660, 410, 110, 40);

        AddButton.setBackground(new java.awt.Color(0, 102, 102));
        AddButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AddButton.setForeground(new java.awt.Color(255, 255, 255));
        AddButton.setText("Add Subject");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AddButton);
        AddButton.setBounds(470, 140, 160, 40);

        DoneButton1.setBackground(new java.awt.Color(0, 102, 102));
        DoneButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        DoneButton1.setForeground(new java.awt.Color(255, 255, 255));
        DoneButton1.setText("Done");
        DoneButton1.setEnabled(false);
        DoneButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(DoneButton1);
        DoneButton1.setBounds(470, 300, 160, 40);

        subjects.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        subjects.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "                         Choose Subject", "Math 1", "Introduction to Computer and Programming", "English Language", "Chemistry", "Engineering Drawing & Projection", "Linear Algebra", "Physics (I)", "Economics of Engineering", "Humanities", "Italian Language", "Production Engineering", "Math 2", "Physics (II)", "Analogue Electronics (I)", "Basic Circuit Theory", "Human Rights", "Environmental Studies", "Elect. Systems and Digital Electronics", "Electromagnetic Fields and Wave Propagation", "Basic Mechanics", "Programming Techniques", "Analogue Electronics (II)", "Probability and Statistics", "Signal Theory", "Data Structures and Algorithms", "Complex Analysis", "Computer Architecture", "Discrete Mathematics", "Microprocessors and Microcontrollers", "Communication Technologies", "Electronic Measurements", "Technical Writing", "Control System Design", "Digital Communications", "Numerical Methods", "Database Systems", "Project Management", "Software Engineering", "Communication Networks", "Operating Systems", "Object oriented programming", "Antennas", "Communications Skills", "Digital Signal Processing", "Information Theory and Coding", "Elective II-1", "Elective II-2", "Elective II-3", "Elective II-4", "Elective II-5", "Elective II-6", "Elective II-7", "Graduation Project I", "Graduation Project II" }));
        subjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectsActionPerformed(evt);
            }
        });
        getContentPane().add(subjects);
        subjects.setBounds(30, 20, 350, 27);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 410, 500);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel6);
        jPanel6.setBounds(410, 0, 390, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectsActionPerformed
        
        
       
    }//GEN-LAST:event_subjectsActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel) Table1.getModel();
        String selected = (String) subjects.getSelectedItem();

        if (!selected.trim().equals("Choose Subject")) {
            int hours = 3;
            if (selected.equals("Math 1") || selected.equals("Math 2") || selected.equals("Elect. Systems and Digital Electronics") || selected.equals("Electromagnetic Fields and Wave Propagation") || selected.equals("Communication Technologies") || selected.equals("Control System Design")) {
                hours = 4;
            } else if (selected.equals("Graduation Project I") || selected.equals("Graduation Project II") || selected.equals("Humanities") || selected.equals("Human Rights") || selected.equals("Environmental Studies") || selected.equals("Technical Writing") || selected.equals("Project Management") || selected.equals("Communications Skills")) {
                hours = 2;
            }
            model.addRow(new Object[]{selected, hours});
            DoneButton1.setEnabled(true);
            subjects.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a Subject");
        }
    }//GEN-LAST:event_AddButtonActionPerformed
    /*
    *               Button to remove selected subjects
    */
    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
      DefaultTableModel r = (DefaultTableModel) Table1.getModel();
        int Drow = Table1.getSelectedRow();
        if (Drow >= 0) {
            r.removeRow(Drow);
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a row to remove");
        }
        if (r.getRowCount() == 0) DoneButton1.setEnabled(false);
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void BackBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBActionPerformed
        
      // wady ya mou7a
     ImageIcon image = new ImageIcon("src/login/icon/logo3.png");
        mainFrameStudent mainFrame = new mainFrameStudent();
        mainFrame.setVisible(true);
        mainFrame.pack();
        mainFrame.setLocationRelativeTo(null);
        mainFrame.setIconImage(image.getImage());
        this.dispose();
    }//GEN-LAST:event_BackBActionPerformed

    private void DoneButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneButton1ActionPerformed
       
      DefaultTableModel model = (DefaultTableModel) Table1.getModel();
    int studentId = LoginApplication.currentUserId;

    try (Connection conn = DBConnection.connect()) {
        String sql = "INSERT INTO registrations (student_id, course_id) VALUES (?, ?) ON CONFLICT DO NOTHING";
        PreparedStatement stmt = conn.prepareStatement(sql);

        for (int i = 0; i < model.getRowCount(); i++) {
            String courseName = model.getValueAt(i, 0).toString();

            // Get the course ID from the database
            int courseId = CourseUtils.getCourseIdByName(courseName);
            if (courseId == -1) {
                // Course not found in DB
                JOptionPane.showMessageDialog(this, "Course '" + courseName + "' not found in database. Skipping.");
                continue;
            }

            stmt.setInt(1, studentId);
            stmt.setInt(2, courseId);
            stmt.addBatch();
        }

        stmt.executeBatch();
        JOptionPane.showMessageDialog(this, "Your registration has been saved.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_DoneButton1ActionPerformed
private void loadSubjectsFromDatabase() {
    try (Connection conn = DBConnection.connect()) {
        String query = "SELECT name FROM courses ORDER BY name ASC";
        PreparedStatement stmt = conn.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();

        subjects.removeAllItems();
        subjects.addItem("Choose Subject");

        while (rs.next()) {
            subjects.addItem(rs.getString("name"));
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Failed to load subjects from database: " + ex.getMessage());
    }
}

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton BackB;
    private javax.swing.JButton DoneButton1;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JTable Table1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> subjects;
    // End of variables declaration//GEN-END:variables
}
